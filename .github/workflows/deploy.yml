name: 🚀 Backend Build → ECR → Terraform → Smoke-test

on:
  push:
    branches: [main]
  pull_request:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v3

      - name: 🔐 Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            us-east-1

      - name: 🐳 Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: 🛠️ Build & push Docker image
        working-directory: backend
        env:
          ECR_REGISTRY:   ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: deploymate-backend
          IMAGE_TAG:      latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # ───────────────────────────────────────────────────────────────────
      #   REPLACE your existing “Set up Terraform” STEP with this block:
      - name: 📦 Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5
          terraform_wrapper: false      # ← disable the Node shim
      # ───────────────────────────────────────────────────────────────────

      - name: 📜 Terraform init & apply
        working-directory: infra
        run: |
          terraform init
          terraform apply -auto-approve


      - name: 🩺 Smoke-test ALB /healthz
        working-directory: infra
        run: |
          # strip any surrounding quotes from the raw DNS output
          ALB_URL=$(terraform output -raw alb_dns_name | sed -e 's/^"//' -e 's/"$//')
          echo "Hitting http://$ALB_URL/healthz"
          curl --fail --silent --show-error "http://$ALB_URL/healthz"
          
          

      - name: 🧪 k6 Load test
        working-directory: infra
        if: success()
        run: |
          BASE="http://$(terraform output -raw alb_dns_name | sed 's/^\"//;s/\"$//')"
          echo "Running k6 against $BASE"

          docker run --rm -i \
          -e BASE_URL=http://localhost:8080 \
          -v ${{ github.workspace }}/monitoring/k6:/scripts \
          loadimpact/k6 run /scripts/loadtest.js

      
